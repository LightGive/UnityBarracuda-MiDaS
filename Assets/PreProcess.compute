#pragma kernel Preprocess
#define IMAGE_SIZE 256

sampler2D _Texture;
RWBuffer<float> _Tensor;

[numthreads(8, 8, 1)]
void Preprocess(uint3 id : SV_DispatchThreadID)
{
    float2 uv = float2(id.x, IMAGE_SIZE - id.y) / IMAGE_SIZE;
    float2 duv_dx = float2(1.0 / IMAGE_SIZE, 0);
    float2 duv_dy = float2(0, -1.0 / IMAGE_SIZE);
    float3 rgb = tex2Dgrad(_Texture, uv, duv_dx, duv_dy).rgb;
    uint offs = (id.y * IMAGE_SIZE + id.x)*3;
    _Tensor[offs + 0] = rgb.r;
    _Tensor[offs + 1] = rgb.g;
    _Tensor[offs + 2] = rgb.b;
}